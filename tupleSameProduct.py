# -*- coding: utf-8 -*-
class Solution(object):
    def tupleSameProduct(self, nums):
        import math
        res = 0
        dic = {}
        for i in range(len(nums)):
            for j in range(i + 1, len(nums)):
                dic[nums[i] * nums[j]] = dic.get(nums[i] * nums[j], 0) + 1
        for k in dic.keys():
            if dic[k] > 0:
                res += math.comb(dic[k], 2) * 8
        return res

    # TLE, 应该不用一直乘，a从最小开始，b从最大开始，这样永远能找到结，而不是contest时写的b也从最小开始
    # https://leetcode.com/problems/tuple-with-same-product/discuss/1020605/JavaPython-3-O(n-3)-and-O(n-2)-codes
    def tupleSameProduct2(self, nums):
        res = 0
        nums.sort()
        for a in range(len(nums)):
            for b in range(a + 1, len(nums)):
                if a == b:
                    continue
                c = 0
                d = len(nums) - 1
                while c < d:
                    if a == b or b == c or c == d or a == c or a == d or b == d:
                        break
                    if nums[a] * nums[b] == nums[c] * nums[d]:
                        res += 1
                        c += 1
                        d -= 1
                    elif nums[a] * nums[b] < nums[c] * nums[d]:
                        d -= 1
                    else:
                        c += 1
        return res * 8

test = Solution()
print test.tupleSameProduct([2,3,4,6])
print test.tupleSameProduct([1,2,4,5,10])
print test.tupleSameProduct([2,3,4,6,8,12])
print test.tupleSameProduct([2,3,5,7])
print test.tupleSameProduct([3589,2387,958,1670,3580,3600,645,1419,1821,3021,3166,2965,846,1912,2217,500,1207,758,1537,3659,3773,3215,2661,2839,2095,59,3290,1348,230,2037,163,2674,2853,2223,3458,2274,1828,2761,3528,81,3071,747,2729,1288,3212,3699,1774,1957,873,2654,53,336,207,3393,3477,3361,1268,477,2197,3360,1578,628,1579,957,735,3462,2737,1962,2067,461,2826,3184,1776,3631,2115,397,3588,1759,3160,1731,363,2304,3172,3621,1624,3729,1466,2651,1059,3114,1893,2415,3975,2485,786,3690,3234,1123,2176,3571,715,2171,1259,1296,673,225,2748,405,698,1997,2291,2838,3432,3684,97,793,139,2840,3821,3255,2677,233,3805,2712,1270,2854,2815,745,3285,3738,584,617,1195,281,3557,3419,1684,1698,3742,1166,146,711,770,2419,742,2716,267,668,3899,1360,2725,3880,3672,1875,761,1685,1474,3323,2931,912,3995,3764,1635,1513,1056,2248,505,3978,2500,3110,181,3,3391,998,12,206,2949,1277,1715,3518,3109,3248,3411,2244,3799,2245,3400,2148,3424,2573,946,3804,1063,1183,1171,1459,2985,3395,1094,3940,409,338,340,3676,2617,1165,1224,508,1253,920,3667,1464,507,821,2722,3990,3356,3784,936,3892,2718,522,2403,941,3886,489,1727,2126,3133,1692,411,1538,1674,2810,1643,105,3670,2168,1870,3055,2345,625,1879,1938,1523,1597,2515,1649,709,3177,1020,1948,1111,3705,2812,1672,3926,1215,2266,2354,780,2388,3430,2337,3746,1313,1548,2447,1499,2124,1308,771,3041,1897,3258,1441,2057,183,2328,3398,647,1999,1030,3985,1558,1098,2633,2881,1025,2073,3336,2818,3983,2502,3573,3844,112,884,2234,3751,352,1278,1385,3707,796,1669,877,537,2471,2628,1252,1930,974,74,1645,1937,1182,1053,226,1008,3585,1,3574,2130,3982,1151,2169,565,3657,1887,1623,1258,2820,3157,3611,574,2039,1634,1985,2510,3745,1591,2189,2816,3442,2833,2292,3275,1690,182,1075,3501,672,2298,568,1661,2225,2948,2731,854,3102,2946,2522,1066,3363,794,1235,1273,680,3587,3996,1505,504,3154,3992,3223,3230,484,2660,1005,309,593,608,2117,2323,755,1146,1517,3352,3998,1002,2800,332,1562,606,2715,2789,430,3293,2879])